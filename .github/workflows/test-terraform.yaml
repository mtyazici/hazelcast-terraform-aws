name: Terraform AWS deployment of Hazelcast cluster and management center

on:
  push:
    branches: master

jobs:
  build:
    env: 
      AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID :  ${{ secrets.AWS_ACCESS_KEY_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name : Set-up Terraform 
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25

      - run: cd aws && terraform init

      - id: plan
        run: cd aws && terraform plan -no-color

      - run: echo ${{ steps.plan.outputs.stdout }}
      - run: echo ${{ steps.plan.outputs.stderr }}
      - run: echo ${{ steps.plan.outputs.exitcode }}

      # - uses: actions/github-script@0.9.0
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #   with:
      #     github-token: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
      #     script: |
      #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      #       #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
      #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
      #       <details><summary>Show Plan</summary>
            
      #       \`\`\`${process.env.PLAN}\`\`\`
            
      #       </details>
            
      #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })